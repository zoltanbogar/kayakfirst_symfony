$(function () {
    $('.birthday-picker').datepicker({
        format: 'yyyy-mm-dd',
        endDate: '-5y',
        startView: 'decade',
        autoclose: true
    });

    var $datepicker = $('.date-container');

    loadingOn();
    $.ajax({
        url: $datepicker.data('training-days-url'),
        type: 'GET'
    }).done(function (data) {
        $datepicker.on("show", function (e) {
            if (data.length) {
                var maxDate = moment(data[data.length - 1]);
                $datepicker.datepicker('setDate', new Date(maxDate.format("YYYY"), maxDate.format("MM") - 1, maxDate.format("DD")));

                loadData(moment($datepicker.datepicker('getDate')).format("YYYY-MM-DD").toString());
            } else {
                loadingOff();
            }
        }).datepicker({
            autoclose: true,
            beforeShowDay: function (date) {
                var date1 = moment(date).format("YYYY-MM-DD").toString();
                if (data.indexOf(date1) != -1) {
                    return 'enabled';
                }
                return false;
            }
        }).on('changeDate', function (e) {
            loadData(moment($datepicker.datepicker('getDate')).format("YYYY-MM-DD").toString());
        });
    }).fail(function () {
        loadingOff();
    });


    $('select').selectize({});

});

if (document.getElementById("chart")) {
    var chart = new EJSC.Chart(
		'chart',
		{
			title: 'Sample Kayak Chart',
			allow_mouse_wheel_zoom: false,
			auto_find_point_by_x: false,
			show_legend: false
			axis_top: {
				caption: 'Distance (km)',
				color: '#676767',
				crosshair: {
					show: true
				},
				grid: {
					show: false
				},
				visible: true
			},
			axis_bottom: {
				caption: 'Time (Hour:min:sec)',
				color: '#676767',
				crosshair: {
					show: true
				},
				grid: {
					show: false
				},
				visible: true
			},
			axis_left: {
				caption: 'Pace',
				color: '#676767',
				crosshair: {
					show: false
				},
				grid: {
					show: false
				},
				visible: true
			},
			axis_right: {
				caption: 'Value',
				color: '#676767',
				crosshair: {
					show: false
				},
				grid: {
					show: false
				},
				visible: true
			},
		}
	);
	chart.axis_bottom.formatter = new EJSC.DateFormatter({
		format_string: "NN:SS"
	});
	chart.axis_left.formatter = new EJSC.DateFormatter({
		format_string: "NN:SS"
	});
}
var sessions = [];
var myChart;

var dataOrder = [
    "t_1000",
    "t_500",
    "t_200",
    "speed",
    "strokes",
    "pull_force",
    "currant_distance"
];

var titles = {
    "t_200": "Pace 200M",
    "t_500": "Pace 500M",
    "t_1000": "Pace 1000M",
    "pull_force": "Pull force",
    "speed": "Speed",
    "strokes": "Strokes",
    "currant_distance": "",
};

var lineColors = {
    "t_200": "#ffff00",
    "t_500": "#ffff00",
    "t_1000": "#ffff00",
    "pull_force": "#0dd278",
    "speed": "#005cff",
    "strokes": "#cd2929",
    "currant_distance": "#008375",
};

var x_axes = {
    "t_200": "bottom",
    "t_500": "bottom",
    "t_1000": "bottom",
    "pull_force": "bottom",
    "speed": "bottom",
    "strokes": "bottom",
    "currant_distance": "top",
};

var y_axes = {
    "t_200": "left",
    "t_500": "left",
    "t_1000": "left",
    "pull_force": "right",
    "speed": "right",
    "strokes": "right",
    "currant_distance": "right",
};
function loadData(selectedDate) {
    var $stable = $("#session-table");
    loadingOn();

    $.ajax({
        url: $stable.data('trainings-url'),
        data: {'selectedDate': selectedDate},
        type: 'POST'
    }).done(function (data) {
        var $tbody = $stable.find('tbody');
        $tbody.html('');
        var firstSession = false;
        for (var sessionId in data) {
            if (!firstSession) {
                firstSession = sessionId;
            }
            sessions[sessionId] = data[sessionId];
            var start = moment(parseInt(data[sessionId]['startTime']));
            var end = moment(parseInt(data[sessionId]['endTime']));
            var ms = end.diff(start);
            var d = moment.duration(ms);
            var duration = Math.floor(d.asHours()) + moment.utc(ms).format(":mm:ss");

            var $tr = $("<tr>").attr('id', sessionId)
                .append($("<td>").html(moment(parseInt(sessionId)).format("HH:mm").toString()))
                .append($("<td>").html(duration))
                .append($("<td>").html(Math.ceil(data[sessionId]['sum_distance']) + ' m')).appendTo($tbody);
            $tr.on("click", function () {
                selectSession($(this).attr('id'));
            });
        }

        if (firstSession) {
            selectSession(firstSession);
        }
        console.log('wtf');
    }).always(function () {
        loadingOff();
    });

}

function selectSession(sessionId) {
    var $stable = $("#session-table");

    $stable.find('tbody tr').removeClass('active');
    $("#" + sessionId).addClass('active');

    // console.log(sessions[sessionId]);

    $("#avg-pace-1000 > span.avg-value").html(msToTime(sessions[sessionId]['t_1000_av']));
    $("#avg-pace-500 > span.avg-value").html(msToTime(sessions[sessionId]['t_500_av']));
    $("#avg-pace-200 > span.avg-value").html(msToTime(sessions[sessionId]['t_200_av']));
    $("#avg-stroke > span.avg-value").html(sessions[sessionId]['strokes_av']);
    $("#avg-speed > span.avg-value").html(sessions[sessionId]['speed_av']);
    $("#avg-speed > span.uom").html('km/h');
    $("#avg-pull-force > span.avg-value").html(sessions[sessionId]['pull_force_av']);
    $("#avg-pull-force > span.uom").html('N');


    $("#best-pace-1000 > span.best-value").html(msToTime(sessions[sessionId]['t_1000_best']));
    $("#best-pace-500 > span.best-value").html(msToTime(sessions[sessionId]['t_500_best']));
    $("#best-pace-200 > span.best-value").html(msToTime(sessions[sessionId]['t_200_best']));
    $("#best-stroke > span.best-value").html(sessions[sessionId]['strokes_best']);
    $("#best-speed > span.best-value").html(sessions[sessionId]['speed_best']);
    $("#best-speed > span.uom").html('km/h');
    $("#best-pull-force > span.best-value").html(sessions[sessionId]['pull_force_best']);
    $("#best-pull-force > span.uom").html('N');
    refreshChart(sessionId);
}

// function generateLegend () {
// 
	// var legendHtml = [], inputType, inputStatus, inputName;
	// legendHtml.push('<div class="row">');
	// for (var dataType in titles) {
		// inputType = dataType.match(/t_/) ? 'radio' : 'checkbox';
		// inputName = dataType.match(/t_/) ? 'radio-option' : 'checkbox-option[]';
		// inputStatus = dataType.match(/t_1000/) ? 'checked="checked"' : '';
		// legendHtml[dataOrder.indexOf(dataType) + 1] = '<div class="col-xs-2"><input type="' + inputType + '" class="' + inputType + '-option chart-option" id="' + inputType + '" name="' + inputName + '" value="' + "in process" + '" ' + inputStatus + ' onclick="updateDataset(event, ' + '\'' + chart.legend.legendItems[i].datasetIndex + '\'' + ')"><label for="' + inputType + chart.legend.legendItems[i].datasetIndex + '" style="border-color:' + lineColors[chart.data.datasets[i].label] + '"><span class="label">' + dataTypes[chart.data.datasets[i].label] + '</span><span class="value" id="tooltip-' + chart.data.datasets[i].label + '"></span></label></div>';
		// if (!inputStatus) {
			// var meta = chart.getDatasetMeta(i);
			// meta.hidden = true;
		// }
	// }
	// legendHtml.push('</div>');
	// legendHtml.join("");
	// 
	// $('#chart-legend').html(legendHtml);
// 
// }

function refreshChart(sessionId) {
    var chartDatasets = [],
        dataValueArr = [];

    var jsonObj = sessions[sessionId].data;
    for (var j in jsonObj) {
        var dataType = jsonObj[j].dataType;

        if (dataType != "currant_distance") {
            if (typeof dataValueArr[dataType] == "undefined") {
                dataValueArr[dataType] = [];
            }
            dataValueArr[dataType].push([
                jsonObj[j].timestamp - sessions[sessionId]['startTime'],
                jsonObj[j].dataValue.toString()
            ]);
        }
    }

    for (var dataType in dataValueArr) {
        chartDatasets[dataType] = 
			new EJSC.LineSeries(
				new EJSC.ArrayDataHandler(
					dataValueArr[dataType]
				),
				{
					title: '',
					visible: true,
					color: lineColors[dataType],
					x_axis: x_axes[dataType],
					y_axis: y_axes[dataType],
					lineWidth: 3,
					padding: {
						x_min: 0,
						y_min: 1,
						x_max: 0,
						y_max: 5
					}
				}
			);
		if (typeof myChart != "undefined") {
			myChart.remove();
			myChart = undefined;
		}
    }

    if (typeof myChart == "undefined") {
        myChart = new EJSC.Chart(
		'chart',
		{
			title: '',
			axis_top: {
				caption: '',
				color: '#676767',
				crosshair: {
					show: true
				},
				grid: {
					show: false
				},
				visible: true
			},
			axis_bottom: {
				caption: '',
				color: '#676767',
				crosshair: {
					show: true
				},
				grid: {
					show: false
				},
				visible: true
			},
			axis_left: {
				caption: '',
				color: '#676767',
				crosshair: {
					show: false
				},
				grid: {
					show: false
				},
				visible: true
			},
			axis_right: {
				caption: '',
				color: '#676767',
				crosshair: {
					show: false
				},
				grid: {
					show: false
				},
				visible: true
			},
			auto_zoom: 'y',
			auto_find_point_by_x: false,
			show_legend: false
		}
	);
	myChart.axis_bottom.formatter = new EJSC.DateFormatter({
		format_string: "NN:SS"
	});
	myChart.axis_left.formatter = new EJSC.DateFormatter({
		format_string: "NN:SS"
	});
    }
    
    myChart.addSeries(chartDatasets['t_1000']);

    // var canvas = document.getElementById("mouse");
    // var context = canvas.getContext("2d");
    // context.setLineDash([3, 5]);
    //
    // canvas.addEventListener("mousemove", function(event) {
    //     var x = event.pageX - canvas.offsetLeft;
    //     var y = event.pageY - canvas.offsetTop;
    //     context.clearRect(0, 0, canvas.width, canvas.height);
    //     context.beginPath();
    //     context.moveTo(0,y);
    //     context.lineTo(595,y);
    //     context.moveTo(x,0);
    //     context.lineTo(x,595);
    //     context.strokeStyle = "black";
    //     context.stroke();
    //     context.closePath();
    //
    //     myChart.eventHandler(event);
    // });

    updateDataset = function (e, datasetIndex) {
        var index = datasetIndex;
        var ci = e.view.myChart;
        $(".chart-option").each(function () {
            if ($(this).is(":checked")) {
                ci.getDatasetMeta($(this).val()).hidden = false;
            } else {
                ci.getDatasetMeta($(this).val()).hidden = true;
                $("#tooltip-" + ci.data.datasets[$(this).val()].label).html('');
            }
        });
        ci.redraw();
    };
    
    //generateLegend();
}


function msToTime(s) {
    var ms = s % 1000;
    s = (s - ms) / 1000;
    var secs = s % 60;
    s = (s - secs) / 60;
    var mins = s % 60;
    mins = (mins < 10) ? '0' + mins : mins;
    secs = (secs < 10) ? '0' + secs : secs;
    return mins + ':' + secs;
}

function toMMSS(value) {
    var sec_num = parseInt(value, 10); // don't forget the second param
    var hours = Math.floor(sec_num / 3600);
    var minutes = Math.floor((sec_num - (hours * 3600)) / 60);
    var seconds = sec_num - (hours * 3600) - (minutes * 60);

    // if (hours   < 10) {hours   = "0"+hours;}
    if (minutes < 10) {
        minutes = "0" + minutes;
    }
    if (seconds < 10) {
        seconds = "0" + seconds;
    }
    return minutes + ':' + seconds;
}

function loadingOn() {
    $("#loading-overlay").show();
}

function loadingOff() {
    $("#loading-overlay").hide();
}